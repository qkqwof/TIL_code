<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation="http://www.springframework.org/schema/beans 
												 http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">
	
	<!-- 사용자 정의 빈 정의 :: id = user01 :: setter 단순파라미터 주입 :: (id)01유저, (age)01 -->
	<bean id = "user01" class ="spring.service.domain.User">
		<property name="userId" value="01유저"></property>
		<property name="age" value="01"></property>
	</bean>
	
	<!-- API 빈 정의 :: id = "password" class="java.lang.String" :: 값 주입 생성자 , 단순 파라미터 값 7777 -->
	<bean id = "password" class = "java.lang.String">
		<constructor-arg value = "7777"></constructor-arg>
	</bean>
	
	<!-- 사용자 정의 빈 정의 :: id = user02 :: setter 단순파라미터 주입 :: (id)02유저, (age)02, (password) 위에서 정의한 password빈 -->
	<bean id = "user02" class = "spring.service.domain.User">
		<property name="userId" value="02유저"></property>
		<property name="age" value="02"></property>
		<property name="password" ref="password"></property>
	</bean>
	
	<!-- 사용자 정의 빈 정의 :: id = user03 :: DI없음 -->
	<bean id = "user03" class = "spring.service.domain.User"></bean>

	<!-- 사용자 정의 빈 정의 :: id = user04 :: 생성자 주입 04, 04 유저-->
	<!-- 여러개의 인자값을 생성자로 주입할 경우 순서 갯수 타입을 정확하게 지켜줘야 하기 떄문에 setter 주입에 비해서 다소 까다로운 측면이 생긴다. -->
	<bean id = "user04" class ="spring.service.domain.User">
		<constructor-arg value="04유저" index="1"/>
		<constructor-arg value="04" index="0"/>
	</bean>
	
	<!-- 사용자정의 빈 정의 :: id = user05 :: 생성자 주입 05, 05유저, 0505 :: 생성자주입의 옵션 (type, index를 함께 사용해서 완벽하게 실행) -->
	<bean id ="user05" class = "spring.service.domain.User">
		<constructor-arg value="05" index="0"/>
		<constructor-arg value="05유저" index="2"/>
		<constructor-arg value="0505" index="1"/>
	</bean>
</beans>